
ThermometerArduino.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  000005cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000558  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800200  00800200  000005cc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005cc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005fc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  0000063c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f36  00000000  00000000  000006cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d69  00000000  00000000  00001602  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000594  00000000  00000000  0000236b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000114  00000000  00000000  00002900  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000618  00000000  00000000  00002a14  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000028a  00000000  00000000  0000302c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  000032b6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	81 c0       	rjmp	.+258    	; 0x108 <__bad_interrupt>
   6:	00 00       	nop
   8:	7f c0       	rjmp	.+254    	; 0x108 <__bad_interrupt>
   a:	00 00       	nop
   c:	7d c0       	rjmp	.+250    	; 0x108 <__bad_interrupt>
   e:	00 00       	nop
  10:	7b c0       	rjmp	.+246    	; 0x108 <__bad_interrupt>
  12:	00 00       	nop
  14:	79 c0       	rjmp	.+242    	; 0x108 <__bad_interrupt>
  16:	00 00       	nop
  18:	77 c0       	rjmp	.+238    	; 0x108 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	75 c0       	rjmp	.+234    	; 0x108 <__bad_interrupt>
  1e:	00 00       	nop
  20:	73 c0       	rjmp	.+230    	; 0x108 <__bad_interrupt>
  22:	00 00       	nop
  24:	71 c0       	rjmp	.+226    	; 0x108 <__bad_interrupt>
  26:	00 00       	nop
  28:	6f c0       	rjmp	.+222    	; 0x108 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	6d c0       	rjmp	.+218    	; 0x108 <__bad_interrupt>
  2e:	00 00       	nop
  30:	6b c0       	rjmp	.+214    	; 0x108 <__bad_interrupt>
  32:	00 00       	nop
  34:	69 c0       	rjmp	.+210    	; 0x108 <__bad_interrupt>
  36:	00 00       	nop
  38:	67 c0       	rjmp	.+206    	; 0x108 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	65 c0       	rjmp	.+202    	; 0x108 <__bad_interrupt>
  3e:	00 00       	nop
  40:	63 c0       	rjmp	.+198    	; 0x108 <__bad_interrupt>
  42:	00 00       	nop
  44:	61 c0       	rjmp	.+194    	; 0x108 <__bad_interrupt>
  46:	00 00       	nop
  48:	02 c1       	rjmp	.+516    	; 0x24e <__vector_18>
  4a:	00 00       	nop
  4c:	5d c0       	rjmp	.+186    	; 0x108 <__bad_interrupt>
  4e:	00 00       	nop
  50:	5b c0       	rjmp	.+182    	; 0x108 <__bad_interrupt>
  52:	00 00       	nop
  54:	59 c0       	rjmp	.+178    	; 0x108 <__bad_interrupt>
  56:	00 00       	nop
  58:	57 c0       	rjmp	.+174    	; 0x108 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	55 c0       	rjmp	.+170    	; 0x108 <__bad_interrupt>
  5e:	00 00       	nop
  60:	53 c0       	rjmp	.+166    	; 0x108 <__bad_interrupt>
  62:	00 00       	nop
  64:	51 c0       	rjmp	.+162    	; 0x108 <__bad_interrupt>
  66:	00 00       	nop
  68:	4f c0       	rjmp	.+158    	; 0x108 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	4d c0       	rjmp	.+154    	; 0x108 <__bad_interrupt>
  6e:	00 00       	nop
  70:	4b c0       	rjmp	.+150    	; 0x108 <__bad_interrupt>
  72:	00 00       	nop
  74:	62 c0       	rjmp	.+196    	; 0x13a <__vector_29>
  76:	00 00       	nop
  78:	47 c0       	rjmp	.+142    	; 0x108 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	45 c0       	rjmp	.+138    	; 0x108 <__bad_interrupt>
  7e:	00 00       	nop
  80:	43 c0       	rjmp	.+134    	; 0x108 <__bad_interrupt>
  82:	00 00       	nop
  84:	41 c0       	rjmp	.+130    	; 0x108 <__bad_interrupt>
  86:	00 00       	nop
  88:	3f c0       	rjmp	.+126    	; 0x108 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	3d c0       	rjmp	.+122    	; 0x108 <__bad_interrupt>
  8e:	00 00       	nop
  90:	3b c0       	rjmp	.+118    	; 0x108 <__bad_interrupt>
  92:	00 00       	nop
  94:	39 c0       	rjmp	.+114    	; 0x108 <__bad_interrupt>
  96:	00 00       	nop
  98:	37 c0       	rjmp	.+110    	; 0x108 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	35 c0       	rjmp	.+106    	; 0x108 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	33 c0       	rjmp	.+102    	; 0x108 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	31 c0       	rjmp	.+98     	; 0x108 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	2f c0       	rjmp	.+94     	; 0x108 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	2d c0       	rjmp	.+90     	; 0x108 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	2b c0       	rjmp	.+86     	; 0x108 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	29 c0       	rjmp	.+82     	; 0x108 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	27 c0       	rjmp	.+78     	; 0x108 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	25 c0       	rjmp	.+74     	; 0x108 <__bad_interrupt>
  be:	00 00       	nop
  c0:	23 c0       	rjmp	.+70     	; 0x108 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	21 c0       	rjmp	.+66     	; 0x108 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	1f c0       	rjmp	.+62     	; 0x108 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	1d c0       	rjmp	.+58     	; 0x108 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	1b c0       	rjmp	.+54     	; 0x108 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	19 c0       	rjmp	.+50     	; 0x108 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	17 c0       	rjmp	.+46     	; 0x108 <__bad_interrupt>
  da:	00 00       	nop
  dc:	15 c0       	rjmp	.+42     	; 0x108 <__bad_interrupt>
  de:	00 00       	nop
  e0:	13 c0       	rjmp	.+38     	; 0x108 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_clear_bss>:
  f4:	22 e0       	ldi	r18, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	01 c0       	rjmp	.+2      	; 0xfe <.do_clear_bss_start>

000000fc <.do_clear_bss_loop>:
  fc:	1d 92       	st	X+, r1

000000fe <.do_clear_bss_start>:
  fe:	a2 30       	cpi	r26, 0x02	; 2
 100:	b2 07       	cpc	r27, r18
 102:	e1 f7       	brne	.-8      	; 0xfc <.do_clear_bss_loop>
 104:	0e d0       	rcall	.+28     	; 0x122 <main>
 106:	26 c2       	rjmp	.+1100   	; 0x554 <_exit>

00000108 <__bad_interrupt>:
 108:	7b cf       	rjmp	.-266    	; 0x0 <__vectors>

0000010a <init_leds>:
		else {
			PORTA &= ~(_BV(val)); //To turn on LED's
		}
		return 0;
	}
}
 10a:	8f ef       	ldi	r24, 0xFF	; 255
 10c:	81 b9       	out	0x01, r24	; 1
 10e:	82 b9       	out	0x02, r24	; 2
 110:	08 95       	ret

00000112 <set_bar>:

void set_bar(uint8_t leds) {
	PORTA = leds ^ 0xff  ;
 112:	80 95       	com	r24
 114:	82 b9       	out	0x02, r24	; 2
 116:	08 95       	ret

00000118 <set_led_bar>:

void set_led_bar(float temp) {
	//Substract the original starting temperature to make it easier, 
	//to pass the parameter for set_bar() function. 
	//18-25 / - 8 LEDS. 
	uint8_t bars_to_set = (uint8_t) temp - 18;
 118:	00 d1       	rcall	.+512    	; 0x31a <__fixunssfsi>
	set_bar(bars_to_set);
 11a:	8e ee       	ldi	r24, 0xEE	; 238
 11c:	86 0f       	add	r24, r22
 11e:	f9 cf       	rjmp	.-14     	; 0x112 <set_bar>
 120:	08 95       	ret

00000122 <main>:
}

int main(void)
{
	init_leds();
 122:	f3 df       	rcall	.-26     	; 0x10a <init_leds>
	init_tmp();
 124:	4a d0       	rcall	.+148    	; 0x1ba <init_tmp>
 126:	8c e8       	ldi	r24, 0x8C	; 140
	set_callback(set_led_bar);
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	02 d0       	rcall	.+4      	; 0x130 <set_callback>
 12c:	78 94       	sei

	sei(); 
 12e:	ff cf       	rjmp	.-2      	; 0x12e <main+0xc>

00000130 <set_callback>:

static void (*call_back)(float);

void set_callback(void (*cb)(float)) {
	//Setting the callback.
	call_back = cb;
 130:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <_edata+0x1>
 134:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_edata>
 138:	08 95       	ret

0000013a <__vector_29>:
}


ISR(ADC_vect) {
 13a:	1f 92       	push	r1
 13c:	0f 92       	push	r0
 13e:	0f b6       	in	r0, 0x3f	; 63
 140:	0f 92       	push	r0
 142:	11 24       	eor	r1, r1
 144:	0b b6       	in	r0, 0x3b	; 59
 146:	0f 92       	push	r0
 148:	2f 93       	push	r18
 14a:	3f 93       	push	r19
 14c:	4f 93       	push	r20
 14e:	5f 93       	push	r21
 150:	6f 93       	push	r22
 152:	7f 93       	push	r23
 154:	8f 93       	push	r24
 156:	9f 93       	push	r25
 158:	af 93       	push	r26
 15a:	bf 93       	push	r27
 15c:	ef 93       	push	r30
 15e:	ff 93       	push	r31
  uint16_t t_read = ADCH;
 160:	60 91 79 00 	lds	r22, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
  //t_read |= (ADCH << 8);
  //t_read >>= 6;
  //t_read <<= 2; //Shifting two symbols to the left, adding zeros. Getting 
  //10 bit value used to calculate actual degrees below.
  double voltage = t_read * (5.0 / 1023.0);
 164:	70 e0       	ldi	r23, 0x00	; 0
 166:	80 e0       	ldi	r24, 0x00	; 0
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	03 d1       	rcall	.+518    	; 0x372 <__floatunsisf>
 16c:	2a e0       	ldi	r18, 0x0A	; 10
 16e:	38 e2       	ldi	r19, 0x28	; 40
 170:	40 ea       	ldi	r20, 0xA0	; 160
 172:	5b e3       	ldi	r21, 0x3B	; 59
 174:	8c d1       	rcall	.+792    	; 0x48e <__mulsf3>
  double temp_in_c = (voltage - 0.5) * 100.0;
 176:	20 e0       	ldi	r18, 0x00	; 0
 178:	30 e0       	ldi	r19, 0x00	; 0
 17a:	40 e0       	ldi	r20, 0x00	; 0
 17c:	5f e3       	ldi	r21, 0x3F	; 63
 17e:	68 d0       	rcall	.+208    	; 0x250 <__subsf3>
 180:	20 e0       	ldi	r18, 0x00	; 0
 182:	30 e0       	ldi	r19, 0x00	; 0
 184:	48 ec       	ldi	r20, 0xC8	; 200
 186:	52 e4       	ldi	r21, 0x42	; 66
 188:	82 d1       	rcall	.+772    	; 0x48e <__mulsf3>
  call_back(temp_in_c);
 18a:	e0 91 00 02 	lds	r30, 0x0200	; 0x800200 <_edata>
 18e:	f0 91 01 02 	lds	r31, 0x0201	; 0x800201 <_edata+0x1>
 192:	19 95       	eicall
}
 194:	ff 91       	pop	r31
 196:	ef 91       	pop	r30
 198:	bf 91       	pop	r27
 19a:	af 91       	pop	r26
 19c:	9f 91       	pop	r25
 19e:	8f 91       	pop	r24
 1a0:	7f 91       	pop	r23
 1a2:	6f 91       	pop	r22
 1a4:	5f 91       	pop	r21
 1a6:	4f 91       	pop	r20
 1a8:	3f 91       	pop	r19
 1aa:	2f 91       	pop	r18
 1ac:	0f 90       	pop	r0
 1ae:	0b be       	out	0x3b, r0	; 59
 1b0:	0f 90       	pop	r0
 1b2:	0f be       	out	0x3f, r0	; 63
 1b4:	0f 90       	pop	r0
 1b6:	1f 90       	pop	r1
 1b8:	18 95       	reti

000001ba <init_tmp>:

void init_tmp() {
	//Disabling the power reduction ADC bit, PRADC
	//So that it is possible to use the ADC input MUX
	//Disabling Power Reduction of Timer/Counter1, bit PRTIM1
	PRR0 &= ~(_BV(PRADC) | _BV(PRTIM1)) ;
 1ba:	e4 e6       	ldi	r30, 0x64	; 100
 1bc:	f0 e0       	ldi	r31, 0x00	; 0
 1be:	80 81       	ld	r24, Z
 1c0:	86 7f       	andi	r24, 0xF6	; 246
 1c2:	80 83       	st	Z, r24
	//Setting the voltage reference (5V)
	ADMUX |= _BV(REFS0);
 1c4:	ec e7       	ldi	r30, 0x7C	; 124
 1c6:	f0 e0       	ldi	r31, 0x00	; 0
 1c8:	80 81       	ld	r24, Z
 1ca:	80 64       	ori	r24, 0x40	; 64
 1cc:	80 83       	st	Z, r24
	//Adjust result to left - that will take the 8 MSB
	//to ADCH rather than to ADCL. As such precision is not needed.
	ADMUX |= _BV(ADLAR);
 1ce:	80 81       	ld	r24, Z
 1d0:	80 62       	ori	r24, 0x20	; 32
 1d2:	80 83       	st	Z, r24
	//Disable digital input as it is enabled by default
	//it will not be used as input.
	DDRK &= ~(_BV(PK7));
 1d4:	a7 e0       	ldi	r26, 0x07	; 7
 1d6:	b1 e0       	ldi	r27, 0x01	; 1
 1d8:	8c 91       	ld	r24, X
 1da:	8f 77       	andi	r24, 0x7F	; 127
 1dc:	8c 93       	st	X, r24
	DIDR0 |= _BV(ADC0D);
 1de:	ae e7       	ldi	r26, 0x7E	; 126
 1e0:	b0 e0       	ldi	r27, 0x00	; 0
 1e2:	8c 91       	ld	r24, X
 1e4:	81 60       	ori	r24, 0x01	; 1
 1e6:	8c 93       	st	X, r24
	//Input Channel Selection ADC15 - 
	//Can read from multiple channels, in that case is just one
	ADMUX |= _BV(MUX1) | _BV(MUX2) | _BV(MUX0);
 1e8:	80 81       	ld	r24, Z
 1ea:	87 60       	ori	r24, 0x07	; 7
 1ec:	80 83       	st	Z, r24
	ADMUX &= ~(_BV(MUX3) | _BV(MUX4));
 1ee:	80 81       	ld	r24, Z
 1f0:	87 7e       	andi	r24, 0xE7	; 231
 1f2:	80 83       	st	Z, r24
	ADCSRB |= _BV(MUX5);
 1f4:	ab e7       	ldi	r26, 0x7B	; 123
 1f6:	b0 e0       	ldi	r27, 0x00	; 0
 1f8:	8c 91       	ld	r24, X
 1fa:	88 60       	ori	r24, 0x08	; 8
 1fc:	8c 93       	st	X, r24
	//MUX5..0 -> 100111
	//Selecting ADC prescaler - Set out the frequency ADC clock
	ADCSRA |= _BV(ADPS0) | _BV(ADPS1) | _BV(ADPS2);
 1fe:	ea e7       	ldi	r30, 0x7A	; 122
 200:	f0 e0       	ldi	r31, 0x00	; 0
 202:	80 81       	ld	r24, Z
 204:	87 60       	ori	r24, 0x07	; 7
 206:	80 83       	st	Z, r24
	//ADATE - Enable Auto Trigger
	//ADIE - Interrupt Enable
	ADCSRA |= _BV(ADATE) | _BV(ADIE);
 208:	80 81       	ld	r24, Z
 20a:	88 62       	ori	r24, 0x28	; 40
 20c:	80 83       	st	Z, r24
	//Timer/Counter1 Compare Match B //Autro Trigger source selection (ADATE bit)
	ADCSRB |= _BV(ADTS2) | _BV(ADTS0);
 20e:	8c 91       	ld	r24, X
 210:	85 60       	ori	r24, 0x05	; 5
 212:	8c 93       	st	X, r24
	//ADEN - Turn on Analog Digital Converter
	ADCSRA |= _BV(ADEN);
 214:	80 81       	ld	r24, Z
 216:	80 68       	ori	r24, 0x80	; 128
 218:	80 83       	st	Z, r24
	//ADSC - Starts the conversion of the input from ADC
	// ADCSRB |= _BV(ADSC);
	//.Facial recognition setup
	OCR1A = 15625;
 21a:	89 e0       	ldi	r24, 0x09	; 9
 21c:	9d e3       	ldi	r25, 0x3D	; 61
 21e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
 222:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
	OCR1B = 10;
 226:	8a e0       	ldi	r24, 0x0A	; 10
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7c008b>
 22e:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7c008a>
	//Selecting a clock source prescaler, in 
	//that case it is clk/1024, because 1 
	//second is tiny enough to use with 
	//this prescaler
	TCCR1B |= _BV(CS12) | _BV(CS10);
 232:	e1 e8       	ldi	r30, 0x81	; 129
 234:	f0 e0       	ldi	r31, 0x00	; 0
 236:	80 81       	ld	r24, Z
 238:	85 60       	ori	r24, 0x05	; 5
 23a:	80 83       	st	Z, r24
	TCCR1B |= _BV(WGM12); // CTC
 23c:	80 81       	ld	r24, Z
 23e:	88 60       	ori	r24, 0x08	; 8
 240:	80 83       	st	Z, r24
	//Enable Timer Interrupt Mask
	TIMSK1 |= _BV(OCIE1B);
 242:	ef e6       	ldi	r30, 0x6F	; 111
 244:	f0 e0       	ldi	r31, 0x00	; 0
 246:	80 81       	ld	r24, Z
 248:	84 60       	ori	r24, 0x04	; 4
 24a:	80 83       	st	Z, r24
 24c:	08 95       	ret

0000024e <__vector_18>:
}

// clear the interrupt flag in the registry
 24e:	18 95       	reti

00000250 <__subsf3>:
 250:	50 58       	subi	r21, 0x80	; 128

00000252 <__addsf3>:
 252:	bb 27       	eor	r27, r27
 254:	aa 27       	eor	r26, r26
 256:	0e d0       	rcall	.+28     	; 0x274 <__addsf3x>
 258:	e0 c0       	rjmp	.+448    	; 0x41a <__fp_round>
 25a:	d1 d0       	rcall	.+418    	; 0x3fe <__fp_pscA>
 25c:	30 f0       	brcs	.+12     	; 0x26a <__addsf3+0x18>
 25e:	d6 d0       	rcall	.+428    	; 0x40c <__fp_pscB>
 260:	20 f0       	brcs	.+8      	; 0x26a <__addsf3+0x18>
 262:	31 f4       	brne	.+12     	; 0x270 <__addsf3+0x1e>
 264:	9f 3f       	cpi	r25, 0xFF	; 255
 266:	11 f4       	brne	.+4      	; 0x26c <__addsf3+0x1a>
 268:	1e f4       	brtc	.+6      	; 0x270 <__addsf3+0x1e>
 26a:	c6 c0       	rjmp	.+396    	; 0x3f8 <__fp_nan>
 26c:	0e f4       	brtc	.+2      	; 0x270 <__addsf3+0x1e>
 26e:	e0 95       	com	r30
 270:	e7 fb       	bst	r30, 7
 272:	bc c0       	rjmp	.+376    	; 0x3ec <__fp_inf>

00000274 <__addsf3x>:
 274:	e9 2f       	mov	r30, r25
 276:	e2 d0       	rcall	.+452    	; 0x43c <__fp_split3>
 278:	80 f3       	brcs	.-32     	; 0x25a <__addsf3+0x8>
 27a:	ba 17       	cp	r27, r26
 27c:	62 07       	cpc	r22, r18
 27e:	73 07       	cpc	r23, r19
 280:	84 07       	cpc	r24, r20
 282:	95 07       	cpc	r25, r21
 284:	18 f0       	brcs	.+6      	; 0x28c <__addsf3x+0x18>
 286:	71 f4       	brne	.+28     	; 0x2a4 <__addsf3x+0x30>
 288:	9e f5       	brtc	.+102    	; 0x2f0 <__addsf3x+0x7c>
 28a:	fa c0       	rjmp	.+500    	; 0x480 <__fp_zero>
 28c:	0e f4       	brtc	.+2      	; 0x290 <__addsf3x+0x1c>
 28e:	e0 95       	com	r30
 290:	0b 2e       	mov	r0, r27
 292:	ba 2f       	mov	r27, r26
 294:	a0 2d       	mov	r26, r0
 296:	0b 01       	movw	r0, r22
 298:	b9 01       	movw	r22, r18
 29a:	90 01       	movw	r18, r0
 29c:	0c 01       	movw	r0, r24
 29e:	ca 01       	movw	r24, r20
 2a0:	a0 01       	movw	r20, r0
 2a2:	11 24       	eor	r1, r1
 2a4:	ff 27       	eor	r31, r31
 2a6:	59 1b       	sub	r21, r25
 2a8:	99 f0       	breq	.+38     	; 0x2d0 <__addsf3x+0x5c>
 2aa:	59 3f       	cpi	r21, 0xF9	; 249
 2ac:	50 f4       	brcc	.+20     	; 0x2c2 <__addsf3x+0x4e>
 2ae:	50 3e       	cpi	r21, 0xE0	; 224
 2b0:	68 f1       	brcs	.+90     	; 0x30c <__addsf3x+0x98>
 2b2:	1a 16       	cp	r1, r26
 2b4:	f0 40       	sbci	r31, 0x00	; 0
 2b6:	a2 2f       	mov	r26, r18
 2b8:	23 2f       	mov	r18, r19
 2ba:	34 2f       	mov	r19, r20
 2bc:	44 27       	eor	r20, r20
 2be:	58 5f       	subi	r21, 0xF8	; 248
 2c0:	f3 cf       	rjmp	.-26     	; 0x2a8 <__addsf3x+0x34>
 2c2:	46 95       	lsr	r20
 2c4:	37 95       	ror	r19
 2c6:	27 95       	ror	r18
 2c8:	a7 95       	ror	r26
 2ca:	f0 40       	sbci	r31, 0x00	; 0
 2cc:	53 95       	inc	r21
 2ce:	c9 f7       	brne	.-14     	; 0x2c2 <__addsf3x+0x4e>
 2d0:	7e f4       	brtc	.+30     	; 0x2f0 <__addsf3x+0x7c>
 2d2:	1f 16       	cp	r1, r31
 2d4:	ba 0b       	sbc	r27, r26
 2d6:	62 0b       	sbc	r22, r18
 2d8:	73 0b       	sbc	r23, r19
 2da:	84 0b       	sbc	r24, r20
 2dc:	ba f0       	brmi	.+46     	; 0x30c <__addsf3x+0x98>
 2de:	91 50       	subi	r25, 0x01	; 1
 2e0:	a1 f0       	breq	.+40     	; 0x30a <__addsf3x+0x96>
 2e2:	ff 0f       	add	r31, r31
 2e4:	bb 1f       	adc	r27, r27
 2e6:	66 1f       	adc	r22, r22
 2e8:	77 1f       	adc	r23, r23
 2ea:	88 1f       	adc	r24, r24
 2ec:	c2 f7       	brpl	.-16     	; 0x2de <__addsf3x+0x6a>
 2ee:	0e c0       	rjmp	.+28     	; 0x30c <__addsf3x+0x98>
 2f0:	ba 0f       	add	r27, r26
 2f2:	62 1f       	adc	r22, r18
 2f4:	73 1f       	adc	r23, r19
 2f6:	84 1f       	adc	r24, r20
 2f8:	48 f4       	brcc	.+18     	; 0x30c <__addsf3x+0x98>
 2fa:	87 95       	ror	r24
 2fc:	77 95       	ror	r23
 2fe:	67 95       	ror	r22
 300:	b7 95       	ror	r27
 302:	f7 95       	ror	r31
 304:	9e 3f       	cpi	r25, 0xFE	; 254
 306:	08 f0       	brcs	.+2      	; 0x30a <__addsf3x+0x96>
 308:	b3 cf       	rjmp	.-154    	; 0x270 <__addsf3+0x1e>
 30a:	93 95       	inc	r25
 30c:	88 0f       	add	r24, r24
 30e:	08 f0       	brcs	.+2      	; 0x312 <__addsf3x+0x9e>
 310:	99 27       	eor	r25, r25
 312:	ee 0f       	add	r30, r30
 314:	97 95       	ror	r25
 316:	87 95       	ror	r24
 318:	08 95       	ret

0000031a <__fixunssfsi>:
 31a:	98 d0       	rcall	.+304    	; 0x44c <__fp_splitA>
 31c:	88 f0       	brcs	.+34     	; 0x340 <__fixunssfsi+0x26>
 31e:	9f 57       	subi	r25, 0x7F	; 127
 320:	90 f0       	brcs	.+36     	; 0x346 <__fixunssfsi+0x2c>
 322:	b9 2f       	mov	r27, r25
 324:	99 27       	eor	r25, r25
 326:	b7 51       	subi	r27, 0x17	; 23
 328:	a0 f0       	brcs	.+40     	; 0x352 <__fixunssfsi+0x38>
 32a:	d1 f0       	breq	.+52     	; 0x360 <__fixunssfsi+0x46>
 32c:	66 0f       	add	r22, r22
 32e:	77 1f       	adc	r23, r23
 330:	88 1f       	adc	r24, r24
 332:	99 1f       	adc	r25, r25
 334:	1a f0       	brmi	.+6      	; 0x33c <__fixunssfsi+0x22>
 336:	ba 95       	dec	r27
 338:	c9 f7       	brne	.-14     	; 0x32c <__fixunssfsi+0x12>
 33a:	12 c0       	rjmp	.+36     	; 0x360 <__fixunssfsi+0x46>
 33c:	b1 30       	cpi	r27, 0x01	; 1
 33e:	81 f0       	breq	.+32     	; 0x360 <__fixunssfsi+0x46>
 340:	9f d0       	rcall	.+318    	; 0x480 <__fp_zero>
 342:	b1 e0       	ldi	r27, 0x01	; 1
 344:	08 95       	ret
 346:	9c c0       	rjmp	.+312    	; 0x480 <__fp_zero>
 348:	67 2f       	mov	r22, r23
 34a:	78 2f       	mov	r23, r24
 34c:	88 27       	eor	r24, r24
 34e:	b8 5f       	subi	r27, 0xF8	; 248
 350:	39 f0       	breq	.+14     	; 0x360 <__fixunssfsi+0x46>
 352:	b9 3f       	cpi	r27, 0xF9	; 249
 354:	cc f3       	brlt	.-14     	; 0x348 <__fixunssfsi+0x2e>
 356:	86 95       	lsr	r24
 358:	77 95       	ror	r23
 35a:	67 95       	ror	r22
 35c:	b3 95       	inc	r27
 35e:	d9 f7       	brne	.-10     	; 0x356 <__fixunssfsi+0x3c>
 360:	3e f4       	brtc	.+14     	; 0x370 <__fixunssfsi+0x56>
 362:	90 95       	com	r25
 364:	80 95       	com	r24
 366:	70 95       	com	r23
 368:	61 95       	neg	r22
 36a:	7f 4f       	sbci	r23, 0xFF	; 255
 36c:	8f 4f       	sbci	r24, 0xFF	; 255
 36e:	9f 4f       	sbci	r25, 0xFF	; 255
 370:	08 95       	ret

00000372 <__floatunsisf>:
 372:	e8 94       	clt
 374:	09 c0       	rjmp	.+18     	; 0x388 <__floatsisf+0x12>

00000376 <__floatsisf>:
 376:	97 fb       	bst	r25, 7
 378:	3e f4       	brtc	.+14     	; 0x388 <__floatsisf+0x12>
 37a:	90 95       	com	r25
 37c:	80 95       	com	r24
 37e:	70 95       	com	r23
 380:	61 95       	neg	r22
 382:	7f 4f       	sbci	r23, 0xFF	; 255
 384:	8f 4f       	sbci	r24, 0xFF	; 255
 386:	9f 4f       	sbci	r25, 0xFF	; 255
 388:	99 23       	and	r25, r25
 38a:	a9 f0       	breq	.+42     	; 0x3b6 <__floatsisf+0x40>
 38c:	f9 2f       	mov	r31, r25
 38e:	96 e9       	ldi	r25, 0x96	; 150
 390:	bb 27       	eor	r27, r27
 392:	93 95       	inc	r25
 394:	f6 95       	lsr	r31
 396:	87 95       	ror	r24
 398:	77 95       	ror	r23
 39a:	67 95       	ror	r22
 39c:	b7 95       	ror	r27
 39e:	f1 11       	cpse	r31, r1
 3a0:	f8 cf       	rjmp	.-16     	; 0x392 <__floatsisf+0x1c>
 3a2:	fa f4       	brpl	.+62     	; 0x3e2 <__floatsisf+0x6c>
 3a4:	bb 0f       	add	r27, r27
 3a6:	11 f4       	brne	.+4      	; 0x3ac <__floatsisf+0x36>
 3a8:	60 ff       	sbrs	r22, 0
 3aa:	1b c0       	rjmp	.+54     	; 0x3e2 <__floatsisf+0x6c>
 3ac:	6f 5f       	subi	r22, 0xFF	; 255
 3ae:	7f 4f       	sbci	r23, 0xFF	; 255
 3b0:	8f 4f       	sbci	r24, 0xFF	; 255
 3b2:	9f 4f       	sbci	r25, 0xFF	; 255
 3b4:	16 c0       	rjmp	.+44     	; 0x3e2 <__floatsisf+0x6c>
 3b6:	88 23       	and	r24, r24
 3b8:	11 f0       	breq	.+4      	; 0x3be <__floatsisf+0x48>
 3ba:	96 e9       	ldi	r25, 0x96	; 150
 3bc:	11 c0       	rjmp	.+34     	; 0x3e0 <__floatsisf+0x6a>
 3be:	77 23       	and	r23, r23
 3c0:	21 f0       	breq	.+8      	; 0x3ca <__floatsisf+0x54>
 3c2:	9e e8       	ldi	r25, 0x8E	; 142
 3c4:	87 2f       	mov	r24, r23
 3c6:	76 2f       	mov	r23, r22
 3c8:	05 c0       	rjmp	.+10     	; 0x3d4 <__floatsisf+0x5e>
 3ca:	66 23       	and	r22, r22
 3cc:	71 f0       	breq	.+28     	; 0x3ea <__floatsisf+0x74>
 3ce:	96 e8       	ldi	r25, 0x86	; 134
 3d0:	86 2f       	mov	r24, r22
 3d2:	70 e0       	ldi	r23, 0x00	; 0
 3d4:	60 e0       	ldi	r22, 0x00	; 0
 3d6:	2a f0       	brmi	.+10     	; 0x3e2 <__floatsisf+0x6c>
 3d8:	9a 95       	dec	r25
 3da:	66 0f       	add	r22, r22
 3dc:	77 1f       	adc	r23, r23
 3de:	88 1f       	adc	r24, r24
 3e0:	da f7       	brpl	.-10     	; 0x3d8 <__floatsisf+0x62>
 3e2:	88 0f       	add	r24, r24
 3e4:	96 95       	lsr	r25
 3e6:	87 95       	ror	r24
 3e8:	97 f9       	bld	r25, 7
 3ea:	08 95       	ret

000003ec <__fp_inf>:
 3ec:	97 f9       	bld	r25, 7
 3ee:	9f 67       	ori	r25, 0x7F	; 127
 3f0:	80 e8       	ldi	r24, 0x80	; 128
 3f2:	70 e0       	ldi	r23, 0x00	; 0
 3f4:	60 e0       	ldi	r22, 0x00	; 0
 3f6:	08 95       	ret

000003f8 <__fp_nan>:
 3f8:	9f ef       	ldi	r25, 0xFF	; 255
 3fa:	80 ec       	ldi	r24, 0xC0	; 192
 3fc:	08 95       	ret

000003fe <__fp_pscA>:
 3fe:	00 24       	eor	r0, r0
 400:	0a 94       	dec	r0
 402:	16 16       	cp	r1, r22
 404:	17 06       	cpc	r1, r23
 406:	18 06       	cpc	r1, r24
 408:	09 06       	cpc	r0, r25
 40a:	08 95       	ret

0000040c <__fp_pscB>:
 40c:	00 24       	eor	r0, r0
 40e:	0a 94       	dec	r0
 410:	12 16       	cp	r1, r18
 412:	13 06       	cpc	r1, r19
 414:	14 06       	cpc	r1, r20
 416:	05 06       	cpc	r0, r21
 418:	08 95       	ret

0000041a <__fp_round>:
 41a:	09 2e       	mov	r0, r25
 41c:	03 94       	inc	r0
 41e:	00 0c       	add	r0, r0
 420:	11 f4       	brne	.+4      	; 0x426 <__fp_round+0xc>
 422:	88 23       	and	r24, r24
 424:	52 f0       	brmi	.+20     	; 0x43a <__fp_round+0x20>
 426:	bb 0f       	add	r27, r27
 428:	40 f4       	brcc	.+16     	; 0x43a <__fp_round+0x20>
 42a:	bf 2b       	or	r27, r31
 42c:	11 f4       	brne	.+4      	; 0x432 <__fp_round+0x18>
 42e:	60 ff       	sbrs	r22, 0
 430:	04 c0       	rjmp	.+8      	; 0x43a <__fp_round+0x20>
 432:	6f 5f       	subi	r22, 0xFF	; 255
 434:	7f 4f       	sbci	r23, 0xFF	; 255
 436:	8f 4f       	sbci	r24, 0xFF	; 255
 438:	9f 4f       	sbci	r25, 0xFF	; 255
 43a:	08 95       	ret

0000043c <__fp_split3>:
 43c:	57 fd       	sbrc	r21, 7
 43e:	90 58       	subi	r25, 0x80	; 128
 440:	44 0f       	add	r20, r20
 442:	55 1f       	adc	r21, r21
 444:	59 f0       	breq	.+22     	; 0x45c <__fp_splitA+0x10>
 446:	5f 3f       	cpi	r21, 0xFF	; 255
 448:	71 f0       	breq	.+28     	; 0x466 <__fp_splitA+0x1a>
 44a:	47 95       	ror	r20

0000044c <__fp_splitA>:
 44c:	88 0f       	add	r24, r24
 44e:	97 fb       	bst	r25, 7
 450:	99 1f       	adc	r25, r25
 452:	61 f0       	breq	.+24     	; 0x46c <__fp_splitA+0x20>
 454:	9f 3f       	cpi	r25, 0xFF	; 255
 456:	79 f0       	breq	.+30     	; 0x476 <__fp_splitA+0x2a>
 458:	87 95       	ror	r24
 45a:	08 95       	ret
 45c:	12 16       	cp	r1, r18
 45e:	13 06       	cpc	r1, r19
 460:	14 06       	cpc	r1, r20
 462:	55 1f       	adc	r21, r21
 464:	f2 cf       	rjmp	.-28     	; 0x44a <__fp_split3+0xe>
 466:	46 95       	lsr	r20
 468:	f1 df       	rcall	.-30     	; 0x44c <__fp_splitA>
 46a:	08 c0       	rjmp	.+16     	; 0x47c <__fp_splitA+0x30>
 46c:	16 16       	cp	r1, r22
 46e:	17 06       	cpc	r1, r23
 470:	18 06       	cpc	r1, r24
 472:	99 1f       	adc	r25, r25
 474:	f1 cf       	rjmp	.-30     	; 0x458 <__fp_splitA+0xc>
 476:	86 95       	lsr	r24
 478:	71 05       	cpc	r23, r1
 47a:	61 05       	cpc	r22, r1
 47c:	08 94       	sec
 47e:	08 95       	ret

00000480 <__fp_zero>:
 480:	e8 94       	clt

00000482 <__fp_szero>:
 482:	bb 27       	eor	r27, r27
 484:	66 27       	eor	r22, r22
 486:	77 27       	eor	r23, r23
 488:	cb 01       	movw	r24, r22
 48a:	97 f9       	bld	r25, 7
 48c:	08 95       	ret

0000048e <__mulsf3>:
 48e:	0b d0       	rcall	.+22     	; 0x4a6 <__mulsf3x>
 490:	c4 cf       	rjmp	.-120    	; 0x41a <__fp_round>
 492:	b5 df       	rcall	.-150    	; 0x3fe <__fp_pscA>
 494:	28 f0       	brcs	.+10     	; 0x4a0 <__mulsf3+0x12>
 496:	ba df       	rcall	.-140    	; 0x40c <__fp_pscB>
 498:	18 f0       	brcs	.+6      	; 0x4a0 <__mulsf3+0x12>
 49a:	95 23       	and	r25, r21
 49c:	09 f0       	breq	.+2      	; 0x4a0 <__mulsf3+0x12>
 49e:	a6 cf       	rjmp	.-180    	; 0x3ec <__fp_inf>
 4a0:	ab cf       	rjmp	.-170    	; 0x3f8 <__fp_nan>
 4a2:	11 24       	eor	r1, r1
 4a4:	ee cf       	rjmp	.-36     	; 0x482 <__fp_szero>

000004a6 <__mulsf3x>:
 4a6:	ca df       	rcall	.-108    	; 0x43c <__fp_split3>
 4a8:	a0 f3       	brcs	.-24     	; 0x492 <__mulsf3+0x4>

000004aa <__mulsf3_pse>:
 4aa:	95 9f       	mul	r25, r21
 4ac:	d1 f3       	breq	.-12     	; 0x4a2 <__mulsf3+0x14>
 4ae:	95 0f       	add	r25, r21
 4b0:	50 e0       	ldi	r21, 0x00	; 0
 4b2:	55 1f       	adc	r21, r21
 4b4:	62 9f       	mul	r22, r18
 4b6:	f0 01       	movw	r30, r0
 4b8:	72 9f       	mul	r23, r18
 4ba:	bb 27       	eor	r27, r27
 4bc:	f0 0d       	add	r31, r0
 4be:	b1 1d       	adc	r27, r1
 4c0:	63 9f       	mul	r22, r19
 4c2:	aa 27       	eor	r26, r26
 4c4:	f0 0d       	add	r31, r0
 4c6:	b1 1d       	adc	r27, r1
 4c8:	aa 1f       	adc	r26, r26
 4ca:	64 9f       	mul	r22, r20
 4cc:	66 27       	eor	r22, r22
 4ce:	b0 0d       	add	r27, r0
 4d0:	a1 1d       	adc	r26, r1
 4d2:	66 1f       	adc	r22, r22
 4d4:	82 9f       	mul	r24, r18
 4d6:	22 27       	eor	r18, r18
 4d8:	b0 0d       	add	r27, r0
 4da:	a1 1d       	adc	r26, r1
 4dc:	62 1f       	adc	r22, r18
 4de:	73 9f       	mul	r23, r19
 4e0:	b0 0d       	add	r27, r0
 4e2:	a1 1d       	adc	r26, r1
 4e4:	62 1f       	adc	r22, r18
 4e6:	83 9f       	mul	r24, r19
 4e8:	a0 0d       	add	r26, r0
 4ea:	61 1d       	adc	r22, r1
 4ec:	22 1f       	adc	r18, r18
 4ee:	74 9f       	mul	r23, r20
 4f0:	33 27       	eor	r19, r19
 4f2:	a0 0d       	add	r26, r0
 4f4:	61 1d       	adc	r22, r1
 4f6:	23 1f       	adc	r18, r19
 4f8:	84 9f       	mul	r24, r20
 4fa:	60 0d       	add	r22, r0
 4fc:	21 1d       	adc	r18, r1
 4fe:	82 2f       	mov	r24, r18
 500:	76 2f       	mov	r23, r22
 502:	6a 2f       	mov	r22, r26
 504:	11 24       	eor	r1, r1
 506:	9f 57       	subi	r25, 0x7F	; 127
 508:	50 40       	sbci	r21, 0x00	; 0
 50a:	8a f0       	brmi	.+34     	; 0x52e <__mulsf3_pse+0x84>
 50c:	e1 f0       	breq	.+56     	; 0x546 <__mulsf3_pse+0x9c>
 50e:	88 23       	and	r24, r24
 510:	4a f0       	brmi	.+18     	; 0x524 <__mulsf3_pse+0x7a>
 512:	ee 0f       	add	r30, r30
 514:	ff 1f       	adc	r31, r31
 516:	bb 1f       	adc	r27, r27
 518:	66 1f       	adc	r22, r22
 51a:	77 1f       	adc	r23, r23
 51c:	88 1f       	adc	r24, r24
 51e:	91 50       	subi	r25, 0x01	; 1
 520:	50 40       	sbci	r21, 0x00	; 0
 522:	a9 f7       	brne	.-22     	; 0x50e <__mulsf3_pse+0x64>
 524:	9e 3f       	cpi	r25, 0xFE	; 254
 526:	51 05       	cpc	r21, r1
 528:	70 f0       	brcs	.+28     	; 0x546 <__mulsf3_pse+0x9c>
 52a:	60 cf       	rjmp	.-320    	; 0x3ec <__fp_inf>
 52c:	aa cf       	rjmp	.-172    	; 0x482 <__fp_szero>
 52e:	5f 3f       	cpi	r21, 0xFF	; 255
 530:	ec f3       	brlt	.-6      	; 0x52c <__mulsf3_pse+0x82>
 532:	98 3e       	cpi	r25, 0xE8	; 232
 534:	dc f3       	brlt	.-10     	; 0x52c <__mulsf3_pse+0x82>
 536:	86 95       	lsr	r24
 538:	77 95       	ror	r23
 53a:	67 95       	ror	r22
 53c:	b7 95       	ror	r27
 53e:	f7 95       	ror	r31
 540:	e7 95       	ror	r30
 542:	9f 5f       	subi	r25, 0xFF	; 255
 544:	c1 f7       	brne	.-16     	; 0x536 <__mulsf3_pse+0x8c>
 546:	fe 2b       	or	r31, r30
 548:	88 0f       	add	r24, r24
 54a:	91 1d       	adc	r25, r1
 54c:	96 95       	lsr	r25
 54e:	87 95       	ror	r24
 550:	97 f9       	bld	r25, 7
 552:	08 95       	ret

00000554 <_exit>:
 554:	f8 94       	cli

00000556 <__stop_program>:
 556:	ff cf       	rjmp	.-2      	; 0x556 <__stop_program>
